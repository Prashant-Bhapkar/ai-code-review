Avoid hardcoded secrets like API keys or passwords:
- Do not define sensitive credentials like API keys directly in the code.
- Example: openai.api_key = "..." or any visible secret.
- Use environment variables instead.

Do not use print for logging:
- Avoid using print statements for logging.
- Use Pythonâ€™s logging module instead.

Use 'with' statement when opening files:
- Always use a with statement to open files (e.g., with open(...) as f:)

Functions should be under 50 lines:
- Refactor any function that exceeds 50 lines into smaller functions.

Avoid deep nesting (more than 3 levels):
- Code should not have nested if/for/while blocks beyond 3 levels.
- Refactor nested logic into smaller helper functions.

Always check OpenAI response before using:
- Ensure OpenAI API response has the expected structure before accessing fields.
- Avoid potential runtime errors by validating `.choices` and `.message`.

Avoid reusing variable names like response:
- Reusing names like 'response' for both OpenAI and GitHub requests can cause confusion or bugs.

Comment location must be function-aware:
- When pointing out a problem, always mention function name or filename in the location field.
